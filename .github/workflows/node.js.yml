
name: Deploy to Degital Ocean 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:


  pre_build: 

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

  
    steps: 
    - uses: actions/checkout@v3
    - name: Checking for eslint errors  
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint


  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - run: npm run coverage 
    - run: npm run check-coverage 

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        npm ci
        npm run build

    - name: DigitalOcean App Platform deployment
      uses: digitalocean/app_action@main
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        app_name: unites-converter


  post_deploy:
    runs-on: ubuntu-latest

    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Clean up node_modules
      run: rm -rf  node_modules
    - name: Clean up coverage folder
      run: rm -rf coverage
    - name: Clean up .coverage
      run: rm -rf .coverage
    - name: Clean up .vitest-cache
      run: rm -rf .vitest-cache
    - name: Clean up .nycrc 
      run : rm -rf .nycrc
    - name: Clean up dist folder
      run: rm -rf  dist
    - name: Clean up .eslint.json
      run: rm -rf .eslint.json 
    - name: Clean up package-lock.json 
      run: rm -rf package-lock.json
